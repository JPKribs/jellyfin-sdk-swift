//
// Version.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct Version: Codable, Hashable {

    public var major: Int?
    public var minor: Int?
    public var build: Int?
    public var revision: Int?
    public var majorRevision: Int?
    public var minorRevision: Int?

    public init(major: Int? = nil, minor: Int? = nil, build: Int? = nil, revision: Int? = nil, majorRevision: Int? = nil, minorRevision: Int? = nil) {
        self.major = major
        self.minor = minor
        self.build = build
        self.revision = revision
        self.majorRevision = majorRevision
        self.minorRevision = minorRevision
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case major = "Major"
        case minor = "Minor"
        case build = "Build"
        case revision = "Revision"
        case majorRevision = "MajorRevision"
        case minorRevision = "MinorRevision"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(major, forKey: .major)
        try container.encodeIfPresent(minor, forKey: .minor)
        try container.encodeIfPresent(build, forKey: .build)
        try container.encodeIfPresent(revision, forKey: .revision)
        try container.encodeIfPresent(majorRevision, forKey: .majorRevision)
        try container.encodeIfPresent(minorRevision, forKey: .minorRevision)
    }



}
