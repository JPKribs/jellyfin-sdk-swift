// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths {
    /// Reports that a user has stopped playing an item.
    static public func onPlaybackStopped(userID: String, itemID: String, parameters: OnPlaybackStoppedParameters? = nil) -> Request<Void> {
        Request(method: "DELETE", url: "/Users/\(userID)/PlayingItems/\(itemID)", query: parameters?.asQuery, id: "OnPlaybackStopped")
    }

    public struct OnPlaybackStoppedParameters {
        public var mediaSourceID: String?
        public var nextMediaType: String?
        public var positionTicks: Int?
        public var liveStreamID: String?
        public var playSessionID: String?

        public init(mediaSourceID: String? = nil, nextMediaType: String? = nil, positionTicks: Int? = nil, liveStreamID: String? = nil, playSessionID: String? = nil) {
            self.mediaSourceID = mediaSourceID
            self.nextMediaType = nextMediaType
            self.positionTicks = positionTicks
            self.liveStreamID = liveStreamID
            self.playSessionID = playSessionID
        }

        public var asQuery: [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(mediaSourceID, forKey: "mediaSourceId")
            encoder.encode(nextMediaType, forKey: "nextMediaType")
            encoder.encode(positionTicks, forKey: "positionTicks")
            encoder.encode(liveStreamID, forKey: "liveStreamId")
            encoder.encode(playSessionID, forKey: "playSessionId")
            return encoder.items
        }
    }
}
