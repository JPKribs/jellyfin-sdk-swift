//
// MediaPathDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Media Path dto. */
public struct MediaPathDto: Codable, Hashable {

    /** Gets or sets the name of the library. */
    public var name: String
    /** Gets or sets the path to add. */
    public var path: String?
    public var pathInfo: MediaPathInfo?

    public init(name: String, path: String? = nil, pathInfo: MediaPathInfo? = nil) {
        self.name = name
        self.path = path
        self.pathInfo = pathInfo
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name = "Name"
        case path = "Path"
        case pathInfo = "PathInfo"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(pathInfo, forKey: .pathInfo)
    }



}
